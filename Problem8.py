'''
Created on 2013-06-27

@author: tieuph

Find the greatest product of five consecutive digits in the 
1000-digit number.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

32256
'''
#import math

# def siftBy5(number):
#     largest = 0
#     product = 0
#     while(number > 1):
#         num = number % 100000
#         digit1 = num % 10
#         digit2 = ((num % 100) - digit1)/10
#         digit3 = ((num % 1000) - (num % 100))/100
#         digit4 = ((num % 10000) - (num % 1000))/1000
#         digit5 = ((num % 100000) - (num % 10000))/10000
#         product = digit1 * digit2 * digit3 * digit4 * digit5
#         if(product > largest):
#             largest = product
#         number = math.floor(number / 10)
#     return int(largest)

def siftStringBy5(numbers):
    digit1 = int(numbers[0])
    digit2 = int(numbers[1])
    digit3 = int(numbers[2])
    digit4 = int(numbers[3])
    digit5 = int(numbers[4])
    product = digit1 * digit2 * digit3 * digit4 * digit5
    largest = product
    numbersLength = len(numbers)
    for x in range(5, numbersLength):
        product = int(numbers[x-4]) * int(numbers[x-3]) * int(numbers[x-2]) * int(numbers[x-1]) * int(numbers[x-0])
        largest = max(product, largest)
    return largest

numbers = "73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450"

print siftStringBy5(numbers)
