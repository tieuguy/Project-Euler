'''
Created on 2013-07-03

@author: tieuph

Highly divisible triangular number
Problem 12
Published on Friday, 8th March 2002, 06:00 pm; 
Solved by 84311
The sequence of triangle numbers is generated by adding the 
natural numbers. So the 7th triangle number would be 
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five 
divisors.

What is the value of the first triangle number to have over 
five hundred divisors?

'''
import math
def numOfDiv(number):
    divCounter = 0
    triNum = 1
    x = 1
    while(True):
        triNum = triNumGen(x)
        #print "Trinum: " + str(triNum)
        for y in range(2, int(math.floor(math.sqrt(triNum)))):
            if(triNum % y == 0):
                divCounter += 2
                #print divCounter
            if(divCounter > number):
                return triNum
        x += 1
        divCounter = 2
        
def triNumGen(sequence):
    sum = 0
    for x in range (1, sequence+1):
        sum += x
    return sum

print numOfDiv(500)
#print triNumGen(3)
